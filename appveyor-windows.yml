version: 1.0.{build}
image: Windows Server 2019
build: off

# Change the clone folder to somewhere in "D:\" because this is shared by default with Docker. We need this to mount folders.
clone_folder: D:\source

environment:
  AWS_DEFAULT_REGION: us-east-1
  SAM_CLI_DEV: 1

  # In Windows, tempdir is usually in C:\. But in AppVeyor only D:\ is shared in Docker. 
  # Therefore change TEMPDIR it to D: for invoke tests to work. Python uses $TMPDIR envvar
  # to find root of tempdir
  TMPDIR: D:\tmp

  # MSI Installers only use Py3.6.6. It is sufficient to test with this version here.
  PYTHON_HOME: "C:\\Python36-x64"
  PYTHON_VERSION: '3.6.8'
  PYTHON_ARCH: '64'

init:
  # Uncomment this for RDP
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - ps: gcim Win32_Processor | % { "$($_.NumberOfLogicalProcessors) logical CPUs" }
  - ps: gcim Win32_OperatingSystem | % { "$([int]($_.TotalVisibleMemorySize/1mb)) Gb" }

cache:
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

install:

    # Make sure the temp directory exists for Python to use.
    - "mkdir D:\\tmp"
    - "set PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\bin;%PATH%"

    # To run Nodejs workflow integ tests
    - ps: Install-Product node 10
    # setup Ruby
    - "choco install ruby --version 2.5.3.101 --force -y"
    - "refreshenv"
    - "ruby --version"
    - "gem --version"
    - "gem install bundler -v 1.17.3"
    - "refreshenv"
    - "bundler --version"
    - "echo %PATH%"

    # setup Java, Maven and Gradle
    - "refreshenv"
    - "choco install jdk8 -y --force"
    - "refreshenv"
    - "choco install maven -y --force"
    - "refreshenv"
    - "choco install gradle -y --force"
    - "refreshenv"
    - "java -version"
    - "gradle -v"
    - "mvn --version"

    # Echo final Path
    - "echo %PATH%"

    # Switch to Docker Linux containers
    - ps: Switch-DockerLinux
  
    # Make sure the right Python version is installed for SAM CLI to work
    - choco install python --version $PYTHON_VERSION
    - refreshenv

    - "python --version"
    # Upgrade setuptools, wheel and virtualenv
    - "python -m pip install --upgrade setuptools wheel virtualenv"

    # Create new virtual environment and activate it
    - "rm -rf venv"
    - "python -m virtualenv venv"
    - "venv\\Scripts\\activate"
    - "python -c \"import sys; print(sys.executable)\""

    # Actually install SAM CLI's dependencies
    - "pip install -e \".[dev]\""

test_script:
    - "pytest -vv tests/integration"

# Uncomment for RDP
# on_finish:
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))