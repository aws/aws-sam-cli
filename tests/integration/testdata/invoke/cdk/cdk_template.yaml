Resources:
  helloworldfunctionServiceRole306F1141:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/helloworld-function/ServiceRole/Resource
  helloworldfunctionFDE57595:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - helloworldfunctionServiceRole306F1141
          - Arn
      Environment:
        Variables:
          MODE:
            Ref: ModeEnvVariable
      FunctionName: HelloWorldFunction
      Handler: app.hello_world_handler
      Runtime: python3.8
    DependsOn:
      - helloworldfunctionServiceRole306F1141
    Metadata:
      aws:cdk:path: RootStack/helloworld-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  helloworldserverlessfunctionServiceRole98ADBB39:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/helloworld-serverless-function/ServiceRole/Resource
  helloworldserverlessfunction972B6BB9:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - helloworldserverlessfunctionServiceRole98ADBB39
          - Arn
      Environment:
        Variables:
          MODE:
            Ref: ModeEnvVariable
      Handler: app.handler
      Runtime: python3.8
    DependsOn:
      - helloworldserverlessfunctionServiceRole98ADBB39
    Metadata:
      aws:cdk:path: RootStack/helloworld-serverless-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  timeoutfunctionServiceRoleA84BD66C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/timeout-function/ServiceRole/Resource
  timeoutfunction696856B1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - timeoutfunctionServiceRoleA84BD66C
          - Arn
      Handler: app.timeout_handler
      Runtime: python3.8
      Timeout: 5
    DependsOn:
      - timeoutfunctionServiceRoleA84BD66C
    Metadata:
      aws:cdk:path: RootStack/timeout-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  customenvvarsfunctionServiceRoleAD9C51EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/custom-env-vars-function/ServiceRole/Resource
  customenvvarsfunction25A0ED6D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - customenvvarsfunctionServiceRoleAD9C51EC
          - Arn
      Environment:
        Variables:
          CustomEnvVar: MyVar
      Handler: app.custom_env_var_echo_handler
      Runtime: python3.8
    DependsOn:
      - customenvvarsfunctionServiceRoleAD9C51EC
    Metadata:
      aws:cdk:path: RootStack/custom-env-vars-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  writetostdoutfunctionServiceRole5A54371E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/write-to-stdout-function/ServiceRole/Resource
  writetostdoutfunctionF9EA84FF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - writetostdoutfunctionServiceRole5A54371E
          - Arn
      Handler: app.write_to_stdout
      Runtime: python3.8
    DependsOn:
      - writetostdoutfunctionServiceRole5A54371E
    Metadata:
      aws:cdk:path: RootStack/write-to-stdout-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  writetostderrfunctionServiceRole8B1BE086:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/write-to-stderr-function/ServiceRole/Resource
  writetostderrfunction8B81FA3A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - writetostderrfunctionServiceRole8B1BE086
          - Arn
      Handler: app.write_to_stderr
      Runtime: python3.8
    DependsOn:
      - writetostderrfunctionServiceRole8B1BE086
    Metadata:
      aws:cdk:path: RootStack/write-to-stderr-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  echoeventfunctionServiceRole8CA711AF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/echo-event-function/ServiceRole/Resource
  echoeventfunction24B1CAC4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - echoeventfunctionServiceRole8CA711AF
          - Arn
      FunctionName: CDKEchoEventFunction
      Handler: app.echo_event
      Runtime: python3.8
    DependsOn:
      - echoeventfunctionServiceRole8CA711AF
    Metadata:
      aws:cdk:path: RootStack/echo-event-function/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  echoenvwithparametersServiceRoleB848F593:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: RootStack/echo-env-with-parameters/ServiceRole/Resource
  echoenvwithparametersEDF40860:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3Bucket0C6A52B4
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersfa3b13f8e96c4bf14d4c6a47337be97af700c05a39b382dd2b756f3f50ffd6b9S3VersionKey5F29F473
      Role:
        Fn::GetAtt:
          - echoenvwithparametersServiceRoleB848F593
          - Arn
      Environment:
        Variables:
          MyRuntimeVersion:
            Ref: MyRuntimeVersion
      Handler: app.parameter_echo_handler
      Runtime: python3.8
    DependsOn:
      - echoenvwithparametersServiceRoleB848F593
    Metadata:
      aws:cdk:path: RootStack/echo-env-with-parameters/Resource
      aws:asset:path: ./lambda_code
      aws:asset:is-bundled: false
      aws:asset:property: Code
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/zVNyw6CMBD8Fu5lkWBivCkmngl+wVpWrECbdLcxpum/SzGe5rEzOzXUzR52xQnfXOphqqJ2niDeBPWkLg/boceFhLw6M5Os/mjsqC7OsvigJWd6Yhe8pszXw2DEOJtUfhlnXO4DQrwGq7OdM3+elMEFYu/mrZoxKW5KzEsM2+CqoQ16ImmRKSXVfeTpbNXAEQ7Fi40pfbBiFoL+h1+DTk6O0wAAAA==
    Metadata:
      aws:cdk:path: RootStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
