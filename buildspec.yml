version: 0.2

phases:

  install: 
    commands:
      - export GOPATH="${CODEBUILD_SRC_DIR}"
      - export VERSION="$(date +%Y%m%d).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | awk '{print substr($0,0,7)}')"
      - mkdir -p "${GOPATH}/bin"
      - export PATH=$GOPATH/bin:$PATH 
      - mkdir -p "${GOPATH}/src/github.com/awslabs"
      - ln -s "${CODEBUILD_SRC_DIR}" "${GOPATH}/src/github.com/awslabs/aws-sam-local"
      - go get -u github.com/golang/lint/golint

      - github.com/goreleaser/goreleaser
      - apt-get install rpm ruby ruby-dev rubygems build-essential
      - gem install --no-ri --no-rdoc fpm

  pre_build: 
    commands:

      # Ensure code passes all lint tests
      - golint -set_exit_status

      # Run all tests included with our application
      - cd "${GOPATH}/src/github.com/awslabs/aws-sam-local"
      - go test .

  build:
    commands:

      # Create output directories
      - mkdir -p "${CODEBUILD_SRC_DIR}/windows"
      - mkdir -p "${CODEBUILD_SRC_DIR}/linux"
      - mkdir -p "${CODEBUILD_SRC_DIR}/osx"  
      
      # Build AWS SAM CLI
      - cd "${GOPATH}/src/github.com/awslabs/aws-sam-local"
      - GOOS=linux go build -ldflags "-X main.Version=${VERSION}" -o "${CODEBUILD_SRC_DIR}/linux/sam"
      - GOOS=darwin go build -ldflags "-X main.Version=${VERSION}" -o "${CODEBUILD_SRC_DIR}/osx/sam"
      - GOOS=windows go build -ldflags "-X main.Version=${VERSION}" -o "${CODEBUILD_SRC_DIR}/windows/sam.exe"
      - cd "${CODEBUILD_SRC_DIR}"

      # Create a VERSION file with details on the git hash etc
      - "echo \"Version: $VERSION\" > \"${CODEBUILD_SRC_DIR}/VERSION\""
      - "echo \"GitHash: ${CODEBUILD_RESOLVED_SOURCE_VERSION}\" >> \"${CODEBUILD_SRC_DIR}/VERSION\""
      - "echo \"BuiltBy: AWS CodeBuild\" >> \"${CODEBUILD_SRC_DIR}/VERSION\""
      - "echo \"BuiltAt: $(date -u '+%FT%T+00:00')\" >> \"${CODEBUILD_SRC_DIR}/VERSION\""

      # Create CHECKSUMS file with sha256 hashes for each file
      - shasum -a256 VERSION osx/sam linux/sam windows/sam.exe > CHECKSUMS
    
  post_build:
    commands:
    
      # Release to GitHub
      - "export GITHUB_TOKEN=$(aws ssm get-parameters --with-decryption --names '/github.com/token' | jq -r '.Parameters[].Value')"
      - goreleaser

      # Release the binaries to the public S3 bucket
      - aws s3 cp "${CODEBUILD_SRC_DIR}/linux/sam" s3://aws-sam-local/releases/${VERSION}/linux/sam
      - aws s3 cp "${CODEBUILD_SRC_DIR}/osx/sam" s3://aws-sam-local/releases/${VERSION}/osx/sam
      - aws s3 cp "${CODEBUILD_SRC_DIR}/windows/sam.exe" s3://aws-sam-local/releases/${VERSION}/windows/sam.exe
      - aws s3 cp "${CODEBUILD_SRC_DIR}/VERSION" s3://aws-sam-local/releases/${VERSION}/VERSION
      - aws s3 cp "${CODEBUILD_SRC_DIR}/CHECKSUMS" s3://aws-sam-local/releases/${VERSION}/CHECKSUMS

      # Repoint the latest/ directory to this build
      - aws s3 cp s3://aws-sam-local/releases/${VERSION}/linux/sam s3://aws-sam-local/releases/latest/linux/sam
      - aws s3 cp s3://aws-sam-local/releases/${VERSION}/osx/sam s3://aws-sam-local/releases/latest/osx/sam
      - aws s3 cp s3://aws-sam-local/releases/${VERSION}/windows/sam.exe s3://aws-sam-local/releases/latest/windows/sam.exe
      - aws s3 cp s3://aws-sam-local/releases/${VERSION}/VERSION s3://aws-sam-local/releases/latest/VERSION
      - aws s3 cp s3://aws-sam-local/releases/${VERSION}/CHECKSUMS s3://aws-sam-local/releases/latest/CHECKSUMS

artifacts:
  files:
    - VERSION
    - CHECKSUMS
    - linux/sam
    - osx/sam 
    - windows/sam.exe 
