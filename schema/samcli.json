{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "AWS SAM CLI samconfig schema",
  "type": "object",
  "properties": {
    "version": {
      "title": "Config version",
      "type": "number",
      "default": 0.1
    }
  },
  "required": [
    "version"
  ],
  "additionalProperties": false,
  "patternProperties": {
    "^.+$": {
      "title": "Environment",
      "properties": {
        "init": {
          "title": "Init command",
          "description": "Initialize an AWS SAM application.",
          "properties": {
            "parameters": {
              "title": "Parameters for the init command",
              "description": "Available parameters for the init command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "validate": {
          "title": "Validate command",
          "description": "Validate an AWS SAM Template.",
          "properties": {
            "parameters": {
              "title": "Parameters for the validate command",
              "description": "Available parameters for the validate command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "build": {
          "title": "Build command",
          "description": "Build AWS serverless function code.",
          "properties": {
            "parameters": {
              "title": "Parameters for the build command",
              "description": "Available parameters for the build command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_invoke": {
          "title": "Local Invoke command",
          "description": "Invoke AWS serverless functions locally.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local invoke command",
              "description": "Available parameters for the local invoke command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_start_api": {
          "title": "Local Start Api command",
          "description": "Run & test AWS serverless functions locally as a HTTP API.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local start api command",
              "description": "Available parameters for the local start api command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_generate_event": {
          "title": "Local Generate Event command",
          "description": "Generate events for Lambda functions.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local generate event command",
              "description": "Available parameters for the local generate event command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_start_lambda": {
          "title": "Local Start Lambda command",
          "description": "Emulate AWS serverless functions locally.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local start lambda command",
              "description": "Available parameters for the local start lambda command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "package": {
          "title": "Package command",
          "description": "Package an AWS SAM application.",
          "properties": {
            "parameters": {
              "title": "Parameters for the package command",
              "description": "Available parameters for the package command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "deploy": {
          "title": "Deploy command",
          "description": "The sam deploy command creates a Cloudformation Stack and deploys your resources.",
          "properties": {
            "parameters": {
              "title": "Parameters for the deploy command",
              "description": "Available parameters for the deploy command:\n* guided:\nSpecify this flag to allow SAM CLI to guide you through the deployment using guided prompts.\n* template_file:\nAWS SAM template which references built artifacts for resources in the template. (if applicable)\n* no_execute_changeset:\nIndicates whether to execute the change set. Specify this flag to view stack changes before executing the change set.\n* fail_on_empty_changeset:\nSpecify whether AWS SAM CLI should return a non-zero exit code if there are no changes to be made to the stack. Defaults to a non-zero exit code.\n* confirm_changeset:\nPrompt to confirm if the computed changeset is to be deployed by SAM CLI.\n* disable_rollback:\nPreserves the state of previously provisioned resources when an operation fails.\n* on_failure:\nProvide an action to determine what will happen when a stack fails to create. Three actions are available:\n\n- ROLLBACK: This will rollback a stack to a previous known good state.\n\n- DELETE: The stack will rollback to a previous state if one exists, otherwise the stack will be deleted.\n\n- DO_NOTHING: The stack will not rollback or delete, this is the same as disabling rollback.\n\nDefault behaviour is ROLLBACK.\n\n\n\nThis option is mutually exclusive with --disable-rollback/--no-disable-rollback. You can provide\n--on-failure or --disable-rollback/--no-disable-rollback but not both at the same time.\n* stack_name:\nName of the AWS CloudFormation stack.\n* s3_bucket:\nAWS S3 bucket where artifacts referenced in the template are uploaded.\n* image_repository:\nAWS ECR repository URI where artifacts referenced in the template are uploaded.\n* image_repositories:\nMapping of Function Logical ID to AWS ECR Repository URI.\n\nExample: Function_Logical_ID=ECR_Repo_Uri\nThis option can be specified multiple times.\n* force_upload:\nIndicates whether to override existing files in the S3 bucket. Specify this flag to upload artifacts even if they match existing artifacts in the S3 bucket.\n* s3_prefix:\nPrefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket.\n* kms_key_id:\nThe ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket.\n* role_arn:\nARN of an IAM role that AWS Cloudformation assumes when executing a deployment change set.\n* use_json:\nIndicates whether to use JSON as the format for the output AWS CloudFormation template. YAML is used by default.\n* resolve_s3:\nAutomatically resolve AWS S3 bucket for non-guided deployments. Enabling this option will also create a managed default AWS S3 bucket for you. If one does not provide a --s3-bucket value, the managed bucket will be used. Do not use --guided with this option.\n* resolve_image_repos:\nAutomatically create and delete ECR repositories for image-based functions in non-guided deployments. A companion stack containing ECR repos for each function will be deployed along with the template stack. Automatically created image repositories will be deleted if the corresponding functions are removed.\n* metadata:\nMap of metadata to attach to ALL the artifacts that are referenced in the template.\n* notification_arns:\nARNs of SNS topics that AWS Cloudformation associates with the stack.\n* tags:\nList of tags to associate with the stack.\n* parameter_overrides:\nString that contains AWS CloudFormation parameter overrides encoded as key=value pairs.\n* signing_profiles:\nA string that contains Code Sign configuration parameters as FunctionOrLayerNameToSign=SigningProfileName:SigningProfileOwner Since signing profile owner is optional, it could also be written as FunctionOrLayerNameToSign=SigningProfileName\n* no_progressbar:\nDoes not showcase a progress bar when uploading artifacts to S3 and pushing docker images to ECR\n* capabilities:\nList of capabilities that one must specify before AWS Cloudformation can create certain stacks.\n\nAccepted Values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_RESOURCE_POLICY, CAPABILITY_AUTO_EXPAND.\n\nLearn more at: https://docs.aws.amazon.com/serverlessrepo/latest/devguide/acknowledging-application-capabilities.html\n* profile:\nSelect a specific profile from your credential file to get AWS credentials.\n* region:\nSet the AWS Region of the service. (e.g. us-east-1)\n* beta_features:\nEnable/Disable beta features.\n* debug:\nTurn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.",
              "type": "object",
              "properties": {
                "guided": {
                  "title": "guided",
                  "type": "boolean",
                  "description": "Specify this flag to allow SAM CLI to guide you through the deployment using guided prompts."
                },
                "template_file": {
                  "title": "template_file",
                  "type": "string",
                  "description": "AWS SAM template which references built artifacts for resources in the template. (if applicable)",
                  "default": "template.[yaml|yml|json]"
                },
                "no_execute_changeset": {
                  "title": "no_execute_changeset",
                  "type": "boolean",
                  "description": "Indicates whether to execute the change set. Specify this flag to view stack changes before executing the change set."
                },
                "fail_on_empty_changeset": {
                  "title": "fail_on_empty_changeset",
                  "type": "boolean",
                  "description": "Specify whether AWS SAM CLI should return a non-zero exit code if there are no changes to be made to the stack. Defaults to a non-zero exit code.",
                  "default": true
                },
                "confirm_changeset": {
                  "title": "confirm_changeset",
                  "type": "boolean",
                  "description": "Prompt to confirm if the computed changeset is to be deployed by SAM CLI."
                },
                "disable_rollback": {
                  "title": "disable_rollback",
                  "type": "boolean",
                  "description": "Preserves the state of previously provisioned resources when an operation fails."
                },
                "on_failure": {
                  "title": "on_failure",
                  "type": "string",
                  "description": "Provide an action to determine what will happen when a stack fails to create. Three actions are available:\n\n- ROLLBACK: This will rollback a stack to a previous known good state.\n\n- DELETE: The stack will rollback to a previous state if one exists, otherwise the stack will be deleted.\n\n- DO_NOTHING: The stack will not rollback or delete, this is the same as disabling rollback.\n\nDefault behaviour is ROLLBACK.\n\n\n\nThis option is mutually exclusive with --disable-rollback/--no-disable-rollback. You can provide\n--on-failure or --disable-rollback/--no-disable-rollback but not both at the same time.",
                  "default": "ROLLBACK",
                  "enum": [
                    "ROLLBACK",
                    "DELETE",
                    "DO_NOTHING"
                  ]
                },
                "stack_name": {
                  "title": "stack_name",
                  "type": "string",
                  "description": "Name of the AWS CloudFormation stack."
                },
                "s3_bucket": {
                  "title": "s3_bucket",
                  "type": "string",
                  "description": "AWS S3 bucket where artifacts referenced in the template are uploaded."
                },
                "image_repository": {
                  "title": "image_repository",
                  "type": "string",
                  "description": "AWS ECR repository URI where artifacts referenced in the template are uploaded."
                },
                "image_repositories": {
                  "title": "image_repositories",
                  "type": "string",
                  "description": "Mapping of Function Logical ID to AWS ECR Repository URI.\n\nExample: Function_Logical_ID=ECR_Repo_Uri\nThis option can be specified multiple times."
                },
                "force_upload": {
                  "title": "force_upload",
                  "type": "boolean",
                  "description": "Indicates whether to override existing files in the S3 bucket. Specify this flag to upload artifacts even if they match existing artifacts in the S3 bucket."
                },
                "s3_prefix": {
                  "title": "s3_prefix",
                  "type": "string",
                  "description": "Prefix name that is added to the artifact's name when it is uploaded to the AWS S3 bucket."
                },
                "kms_key_id": {
                  "title": "kms_key_id",
                  "type": "string",
                  "description": "The ID of an AWS KMS key that is used to encrypt artifacts that are at rest in the AWS S3 bucket."
                },
                "role_arn": {
                  "title": "role_arn",
                  "type": "string",
                  "description": "ARN of an IAM role that AWS Cloudformation assumes when executing a deployment change set."
                },
                "use_json": {
                  "title": "use_json",
                  "type": "boolean",
                  "description": "Indicates whether to use JSON as the format for the output AWS CloudFormation template. YAML is used by default."
                },
                "resolve_s3": {
                  "title": "resolve_s3",
                  "type": "boolean",
                  "description": "Automatically resolve AWS S3 bucket for non-guided deployments. Enabling this option will also create a managed default AWS S3 bucket for you. If one does not provide a --s3-bucket value, the managed bucket will be used. Do not use --guided with this option."
                },
                "resolve_image_repos": {
                  "title": "resolve_image_repos",
                  "type": "boolean",
                  "description": "Automatically create and delete ECR repositories for image-based functions in non-guided deployments. A companion stack containing ECR repos for each function will be deployed along with the template stack. Automatically created image repositories will be deleted if the corresponding functions are removed."
                },
                "metadata": {
                  "title": "metadata",
                  "type": "string",
                  "description": "Map of metadata to attach to ALL the artifacts that are referenced in the template."
                },
                "notification_arns": {
                  "title": "notification_arns",
                  "type": "array",
                  "description": "ARNs of SNS topics that AWS Cloudformation associates with the stack.",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "title": "tags",
                  "type": "string",
                  "description": "List of tags to associate with the stack."
                },
                "parameter_overrides": {
                  "title": "parameter_overrides",
                  "type": "string",
                  "description": "String that contains AWS CloudFormation parameter overrides encoded as key=value pairs."
                },
                "signing_profiles": {
                  "title": "signing_profiles",
                  "type": "string",
                  "description": "A string that contains Code Sign configuration parameters as FunctionOrLayerNameToSign=SigningProfileName:SigningProfileOwner Since signing profile owner is optional, it could also be written as FunctionOrLayerNameToSign=SigningProfileName"
                },
                "no_progressbar": {
                  "title": "no_progressbar",
                  "type": "boolean",
                  "description": "Does not showcase a progress bar when uploading artifacts to S3 and pushing docker images to ECR"
                },
                "capabilities": {
                  "title": "capabilities",
                  "type": "array",
                  "description": "List of capabilities that one must specify before AWS Cloudformation can create certain stacks.\n\nAccepted Values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_RESOURCE_POLICY, CAPABILITY_AUTO_EXPAND.\n\nLearn more at: https://docs.aws.amazon.com/serverlessrepo/latest/devguide/acknowledging-application-capabilities.html",
                  "items": {
                    "type": "string"
                  }
                },
                "profile": {
                  "title": "profile",
                  "type": "string",
                  "description": "Select a specific profile from your credential file to get AWS credentials."
                },
                "region": {
                  "title": "region",
                  "type": "string",
                  "description": "Set the AWS Region of the service. (e.g. us-east-1)"
                },
                "beta_features": {
                  "title": "beta_features",
                  "type": "boolean",
                  "description": "Enable/Disable beta features."
                },
                "debug": {
                  "title": "debug",
                  "type": "boolean",
                  "description": "Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps."
                }
              }
            }
          },
          "required": [
            "parameters"
          ]
        },
        "delete": {
          "title": "Delete command",
          "description": "The sam delete command deletes the CloudFormation\nstack and all the artifacts which were created using sam deploy.\n\n\ne.g. sam delete",
          "properties": {
            "parameters": {
              "title": "Parameters for the delete command",
              "description": "Available parameters for the delete command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "logs": {
          "title": "Logs command",
          "description": "The sam logs commands fetches logs of Lambda Functions/CloudWatch log groups\nwith additional filtering by options.",
          "properties": {
            "parameters": {
              "title": "Parameters for the logs command",
              "description": "Available parameters for the logs command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "publish": {
          "title": "Publish command",
          "description": "Use this command to publish a packaged AWS SAM template to\nthe AWS Serverless Application Repository to share within your team,\nacross your organization, or with the community at large.\n\n\nThis command expects the template's Metadata section to contain an\nAWS::ServerlessRepo::Application section with application metadata\nfor publishing. For more details on this metadata section, see\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-publishing-applications.html\n\nExamples\n--------\nTo publish an application\n$ sam publish -t packaged.yaml --region <region>",
          "properties": {
            "parameters": {
              "title": "Parameters for the publish command",
              "description": "Available parameters for the publish command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "traces": {
          "title": "Traces command",
          "description": "Use this command to fetch AWS X-Ray traces generated by your stack.\n\n\nRun the following command to fetch X-Ray traces by ID.\n$ sam traces --trace-id tracing-id-1 --trace-id tracing-id-2\n\nRun the following command to tail X-Ray traces as they become available.\n$ sam traces --tail",
          "properties": {
            "parameters": {
              "title": "Parameters for the traces command",
              "description": "Available parameters for the traces command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "sync": {
          "title": "Sync command",
          "description": "NEW! Sync an AWS SAM Project to AWS.",
          "properties": {
            "parameters": {
              "title": "Parameters for the sync command",
              "description": "Available parameters for the sync command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "pipeline_bootstrap": {
          "title": "Pipeline Bootstrap command",
          "description": "This command generates the required AWS infrastructure resources to connect to your CI/CD system.\nThis step must be run for each deployment stage in your pipeline, prior to running the sam pipline init command.",
          "properties": {
            "parameters": {
              "title": "Parameters for the pipeline bootstrap command",
              "description": "Available parameters for the pipeline bootstrap command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "pipeline_init": {
          "title": "Pipeline Init command",
          "description": "This command generates a pipeline configuration file that your CI/CD system can use to deploy\nserverless applications using AWS SAM.\n\nBefore using sam pipeline init, you must bootstrap the necessary resources for each stage in your pipeline.\nYou can do this by running sam pipeline init --bootstrap to be guided through the setup and configuration\nfile generation process, or refer to resources you have previously created with the sam pipeline bootstrap command.",
          "properties": {
            "parameters": {
              "title": "Parameters for the pipeline init command",
              "description": "Available parameters for the pipeline init command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_resources": {
          "title": "List Resources command",
          "description": "Get a list of resources that will be deployed to CloudFormation.\n\nIf a stack name is provided, the corresponding physical IDs of each\nresource will be mapped to the logical ID of each resource.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list resources command",
              "description": "Available parameters for the list resources command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_stack_outputs": {
          "title": "List Stack Outputs command",
          "description": "Get the stack outputs as defined in the SAM/CloudFormation template.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list stack outputs command",
              "description": "Available parameters for the list stack outputs command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_endpoints": {
          "title": "List Endpoints command",
          "description": "Get a summary of the cloud endpoints in the stack.\n\nThis command will show both the cloud and local endpoints that can\nbe used with sam local and sam sync. Currently the endpoint resources\nare Lambda functions and API Gateway API resources.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list endpoints command",
              "description": "Available parameters for the list endpoints command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "docs": {
          "title": "Docs command",
          "description": "NEW! Open the documentation in a browser.",
          "properties": {
            "parameters": {
              "title": "Parameters for the docs command",
              "description": "Available parameters for the docs command:\n* ",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "remote_invoke": {
          "title": "Remote Invoke command",
          "description": "Invoke or send an event to resources in the cloud.",
          "properties": {
            "parameters": {
              "title": "Parameters for the remote invoke command",
              "description": "Available parameters for the remote invoke command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        }
      }
    }
  }
}