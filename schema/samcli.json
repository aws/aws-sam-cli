{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "AWS SAM CLI samconfig schema",
  "type": "object",
  "properties": {
    "version": {
      "title": "Config version",
      "type": "number",
      "default": 0.1
    }
  },
  "required": [
    "version"
  ],
  "additionalProperties": false,
  "patternProperties": {
    "^.+$": {
      "title": "Environment",
      "properties": {
        "init": {
          "title": "Init command",
          "description": "Initialize an AWS SAM application.",
          "properties": {
            "parameters": {
              "title": "Parameters for the init command",
              "description": "Available parameters for the init command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "validate": {
          "title": "Validate command",
          "description": "Validate an AWS SAM Template.",
          "properties": {
            "parameters": {
              "title": "Parameters for the validate command",
              "description": "Available parameters for the validate command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "build": {
          "title": "Build command",
          "description": "Build AWS serverless function code.",
          "properties": {
            "parameters": {
              "title": "Parameters for the build command",
              "description": "Available parameters for the build command:\n* config_env:\nEnvironment name specifying default parameter values in the configuration file.\n* config_file:\nConfiguration file containing default parameter values.\n* hook_name:\nHook package id to extend AWS SAM CLI commands functionality. \n\nExample: `terraform` to extend AWS SAM CLI commands functionality to support terraform applications. \n\nAvailable Hook Names: ['terraform']\n* skip_prepare_infra:\nSkip preparation stage when there are no infrastructure changes. Only used in conjunction with --hook-name.\n* use_container:\nBuild functions within an AWS Lambda-like container.\n* container_env_var:\nEnvironment variables to be passed into build containersResource format (FuncName.VarName=Value) or Global format (VarName=Value).\n\nExample: --container-env-var Func1.VAR1=value1 --container-env-var VAR2=value2\n* container_env_var_file:\nEnvironment variables json file (e.g., env_vars.json) to be passed to build containers.\n* build_image:\nContainer image URIs for building functions/layers. You can specify for all functions/layers with just the image URI (--build-image public.ecr.aws/sam/build-nodejs18.x:latest). You can specify for each individual function with (--build-image FunctionLogicalID=public.ecr.aws/sam/build-nodejs18.x:latest). A combination of the two can be used. If a function does not have build image specified or an image URI for all functions, the default SAM CLI build images will be used.\n* exclude:\nName of the resource(s) to exclude from AWS SAM CLI build.\n* parallel:\nEnable parallel builds for AWS SAM template's functions and layers.\n* mount_with:\nSpecify mount mode for building functions/layers inside container. If it is mounted with write permissions, some files in source code directory may be changed/added by the build process. By default the source code directory is read only.\n* build_dir:\nDirectory to store build artifacts.Note: This directory will be first removed before starting a build.\n* cache_dir:\nDirectory to store cached artifacts. The default cache directory is .aws-sam/cache\n* base_dir:\nResolve relative paths to function's source code with respect to this directory. Use this if SAM template and source code are not in same enclosing folder. By default, relative paths are resolved with respect to the SAM template's location.\n* manifest:\nPath to a custom dependency manifest. Example: custom-package.json\n* cached:\nEnable cached builds.Reuse build artifacts that have not changed from previous builds. \n\nAWS SAM CLI evaluates if files in your project directory have changed. \n\nNote: AWS SAM CLI does not evaluate changes made to third party modules that the project depends on.Example: Python function includes a requirements.txt file with the following entry requests=1.x and the latest request module version changes from 1.1 to 1.2, AWS SAM CLI will not pull the latest version until a non-cached build is run.\n* template_file:\nAWS SAM template file.\n* parameter_overrides:\nString that contains AWS CloudFormation parameter overrides encoded as key=value pairs.\n* skip_pull_image:\nSkip pulling down the latest Docker image for Lambda runtime.\n* docker_network:\nName or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network. If not specified, the Lambda containers will only connect to the default bridge docker network.\n* beta_features:\nEnable/Disable beta features.\n* debug:\nTurn on debug logging to print debug message generated by AWS SAM CLI and display timestamps.\n* profile:\nSelect a specific profile from your credential file to get AWS credentials.\n* region:\nSet the AWS Region of the service. (e.g. us-east-1)",
              "type": "object",
              "properties": {
                "config_env": {
                  "title": "config_env",
                  "type": "string",
                  "description": "Environment name specifying default parameter values in the configuration file.",
                  "default": "default"
                },
                "config_file": {
                  "title": "config_file",
                  "type": "string",
                  "description": "Configuration file containing default parameter values.",
                  "default": "samconfig.toml"
                },
                "hook_name": {
                  "title": "hook_name",
                  "type": "string",
                  "description": "Hook package id to extend AWS SAM CLI commands functionality. \n\nExample: `terraform` to extend AWS SAM CLI commands functionality to support terraform applications. \n\nAvailable Hook Names: ['terraform']"
                },
                "skip_prepare_infra": {
                  "title": "skip_prepare_infra",
                  "type": "boolean",
                  "description": "Skip preparation stage when there are no infrastructure changes. Only used in conjunction with --hook-name."
                },
                "use_container": {
                  "title": "use_container",
                  "type": "boolean",
                  "description": "Build functions within an AWS Lambda-like container."
                },
                "container_env_var": {
                  "title": "container_env_var",
                  "type": "string",
                  "description": "Environment variables to be passed into build containersResource format (FuncName.VarName=Value) or Global format (VarName=Value).\n\nExample: --container-env-var Func1.VAR1=value1 --container-env-var VAR2=value2"
                },
                "container_env_var_file": {
                  "title": "container_env_var_file",
                  "type": "string",
                  "description": "Environment variables json file (e.g., env_vars.json) to be passed to build containers."
                },
                "build_image": {
                  "title": "build_image",
                  "type": "string",
                  "description": "Container image URIs for building functions/layers. You can specify for all functions/layers with just the image URI (--build-image public.ecr.aws/sam/build-nodejs18.x:latest). You can specify for each individual function with (--build-image FunctionLogicalID=public.ecr.aws/sam/build-nodejs18.x:latest). A combination of the two can be used. If a function does not have build image specified or an image URI for all functions, the default SAM CLI build images will be used."
                },
                "exclude": {
                  "title": "exclude",
                  "type": "string",
                  "description": "Name of the resource(s) to exclude from AWS SAM CLI build."
                },
                "parallel": {
                  "title": "parallel",
                  "type": "boolean",
                  "description": "Enable parallel builds for AWS SAM template's functions and layers."
                },
                "mount_with": {
                  "title": "mount_with",
                  "type": "string",
                  "description": "Specify mount mode for building functions/layers inside container. If it is mounted with write permissions, some files in source code directory may be changed/added by the build process. By default the source code directory is read only.",
                  "default": "READ",
                  "enum": [
                    "READ",
                    "WRITE"
                  ]
                },
                "build_dir": {
                  "title": "build_dir",
                  "type": "string",
                  "description": "Directory to store build artifacts.Note: This directory will be first removed before starting a build.",
                  "default": ".aws-sam/build"
                },
                "cache_dir": {
                  "title": "cache_dir",
                  "type": "string",
                  "description": "Directory to store cached artifacts. The default cache directory is .aws-sam/cache",
                  "default": ".aws-sam/cache"
                },
                "base_dir": {
                  "title": "base_dir",
                  "type": "string",
                  "description": "Resolve relative paths to function's source code with respect to this directory. Use this if SAM template and source code are not in same enclosing folder. By default, relative paths are resolved with respect to the SAM template's location."
                },
                "manifest": {
                  "title": "manifest",
                  "type": "string",
                  "description": "Path to a custom dependency manifest. Example: custom-package.json"
                },
                "cached": {
                  "title": "cached",
                  "type": "boolean",
                  "description": "Enable cached builds.Reuse build artifacts that have not changed from previous builds. \n\nAWS SAM CLI evaluates if files in your project directory have changed. \n\nNote: AWS SAM CLI does not evaluate changes made to third party modules that the project depends on.Example: Python function includes a requirements.txt file with the following entry requests=1.x and the latest request module version changes from 1.1 to 1.2, AWS SAM CLI will not pull the latest version until a non-cached build is run."
                },
                "template_file": {
                  "title": "template_file",
                  "type": "string",
                  "description": "AWS SAM template file.",
                  "default": "template.[yaml|yml|json]"
                },
                "parameter_overrides": {
                  "title": "parameter_overrides",
                  "type": "string",
                  "description": "String that contains AWS CloudFormation parameter overrides encoded as key=value pairs."
                },
                "skip_pull_image": {
                  "title": "skip_pull_image",
                  "type": "boolean",
                  "description": "Skip pulling down the latest Docker image for Lambda runtime."
                },
                "docker_network": {
                  "title": "docker_network",
                  "type": "string",
                  "description": "Name or ID of an existing docker network for AWS Lambda docker containers to connect to, along with the default bridge network. If not specified, the Lambda containers will only connect to the default bridge docker network."
                },
                "beta_features": {
                  "title": "beta_features",
                  "type": "boolean",
                  "description": "Enable/Disable beta features."
                },
                "debug": {
                  "title": "debug",
                  "type": "boolean",
                  "description": "Turn on debug logging to print debug message generated by AWS SAM CLI and display timestamps."
                },
                "profile": {
                  "title": "profile",
                  "type": "string",
                  "description": "Select a specific profile from your credential file to get AWS credentials."
                },
                "region": {
                  "title": "region",
                  "type": "string",
                  "description": "Set the AWS Region of the service. (e.g. us-east-1)"
                }
              }
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_invoke": {
          "title": "Local Invoke command",
          "description": "Invoke AWS serverless functions locally.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local invoke command",
              "description": "Available parameters for the local invoke command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_start_api": {
          "title": "Local Start Api command",
          "description": "Run & test AWS serverless functions locally as a HTTP API.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local start api command",
              "description": "Available parameters for the local start api command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_generate_event": {
          "title": "Local Generate Event command",
          "description": "Generate events for Lambda functions.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local generate event command",
              "description": "Available parameters for the local generate event command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "local_start_lambda": {
          "title": "Local Start Lambda command",
          "description": "Emulate AWS serverless functions locally.",
          "properties": {
            "parameters": {
              "title": "Parameters for the local start lambda command",
              "description": "Available parameters for the local start lambda command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "package": {
          "title": "Package command",
          "description": "Package an AWS SAM application.",
          "properties": {
            "parameters": {
              "title": "Parameters for the package command",
              "description": "Available parameters for the package command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "deploy": {
          "title": "Deploy command",
          "description": "The sam deploy command creates a Cloudformation Stack and deploys your resources.",
          "properties": {
            "parameters": {
              "title": "Parameters for the deploy command",
              "description": "Available parameters for the deploy command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "delete": {
          "title": "Delete command",
          "description": "The sam delete command deletes the CloudFormation\nstack and all the artifacts which were created using sam deploy.\n\n\ne.g. sam delete",
          "properties": {
            "parameters": {
              "title": "Parameters for the delete command",
              "description": "Available parameters for the delete command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "logs": {
          "title": "Logs command",
          "description": "The sam logs commands fetches logs of Lambda Functions/CloudWatch log groups\nwith additional filtering by options.",
          "properties": {
            "parameters": {
              "title": "Parameters for the logs command",
              "description": "Available parameters for the logs command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "publish": {
          "title": "Publish command",
          "description": "Use this command to publish a packaged AWS SAM template to\nthe AWS Serverless Application Repository to share within your team,\nacross your organization, or with the community at large.\n\n\nThis command expects the template's Metadata section to contain an\nAWS::ServerlessRepo::Application section with application metadata\nfor publishing. For more details on this metadata section, see\nhttps://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-publishing-applications.html\n\nExamples\n--------\nTo publish an application\n$ sam publish -t packaged.yaml --region <region>",
          "properties": {
            "parameters": {
              "title": "Parameters for the publish command",
              "description": "Available parameters for the publish command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "traces": {
          "title": "Traces command",
          "description": "Use this command to fetch AWS X-Ray traces generated by your stack.\n\n\nRun the following command to fetch X-Ray traces by ID.\n$ sam traces --trace-id tracing-id-1 --trace-id tracing-id-2\n\nRun the following command to tail X-Ray traces as they become available.\n$ sam traces --tail",
          "properties": {
            "parameters": {
              "title": "Parameters for the traces command",
              "description": "Available parameters for the traces command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "sync": {
          "title": "Sync command",
          "description": "NEW! Sync an AWS SAM Project to AWS.",
          "properties": {
            "parameters": {
              "title": "Parameters for the sync command",
              "description": "Available parameters for the sync command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "pipeline_bootstrap": {
          "title": "Pipeline Bootstrap command",
          "description": "This command generates the required AWS infrastructure resources to connect to your CI/CD system.\nThis step must be run for each deployment stage in your pipeline, prior to running the sam pipline init command.",
          "properties": {
            "parameters": {
              "title": "Parameters for the pipeline bootstrap command",
              "description": "Available parameters for the pipeline bootstrap command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "pipeline_init": {
          "title": "Pipeline Init command",
          "description": "This command generates a pipeline configuration file that your CI/CD system can use to deploy\nserverless applications using AWS SAM.\n\nBefore using sam pipeline init, you must bootstrap the necessary resources for each stage in your pipeline.\nYou can do this by running sam pipeline init --bootstrap to be guided through the setup and configuration\nfile generation process, or refer to resources you have previously created with the sam pipeline bootstrap command.",
          "properties": {
            "parameters": {
              "title": "Parameters for the pipeline init command",
              "description": "Available parameters for the pipeline init command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_resources": {
          "title": "List Resources command",
          "description": "Get a list of resources that will be deployed to CloudFormation.\n\nIf a stack name is provided, the corresponding physical IDs of each\nresource will be mapped to the logical ID of each resource.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list resources command",
              "description": "Available parameters for the list resources command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_stack_outputs": {
          "title": "List Stack Outputs command",
          "description": "Get the stack outputs as defined in the SAM/CloudFormation template.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list stack outputs command",
              "description": "Available parameters for the list stack outputs command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "list_endpoints": {
          "title": "List Endpoints command",
          "description": "Get a summary of the cloud endpoints in the stack.\n\nThis command will show both the cloud and local endpoints that can\nbe used with sam local and sam sync. Currently the endpoint resources\nare Lambda functions and API Gateway API resources.",
          "properties": {
            "parameters": {
              "title": "Parameters for the list endpoints command",
              "description": "Available parameters for the list endpoints command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "docs": {
          "title": "Docs command",
          "description": "NEW! Open the documentation in a browser.",
          "properties": {
            "parameters": {
              "title": "Parameters for the docs command",
              "description": "Available parameters for the docs command:\n* ",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        },
        "remote_invoke": {
          "title": "Remote Invoke command",
          "description": "Invoke or send an event to resources in the cloud.",
          "properties": {
            "parameters": {
              "title": "Parameters for the remote invoke command",
              "description": "Available parameters for the remote invoke command:\n",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "parameters"
          ]
        }
      }
    }
  }
}